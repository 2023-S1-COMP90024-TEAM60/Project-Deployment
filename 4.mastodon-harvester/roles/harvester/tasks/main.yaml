---
- name: Recursively remove directory if it exists
  become: yes
  ansible.builtin.file:
    path: "{{ mastodon_docker_dir }}"
    state: absent
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Create Mastodon directory
  become: yes
  ansible.builtin.file:
    path: "{{ mastodon_docker_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    state: directory
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Copy mastodon source folder with owner and permissions
  become: yes
  synchronize:
    src: ../../mastodon/
    dest: "{{ mastodon_docker_dir }}/"
    mode: push
    delete: true
    rsync_opts:
      - "--exclude=mastodon/"
      - "--exclude=Mastodon.py-1.8.1.dist-info/"
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Copy docker-compose file with owner and permissions
  become: yes
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ mastodon_docker_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname == groups['DockerSwarmManager'][0]

- name: Build an image
  become: yes
  community.docker.docker_image:
    build:
      path: "{{ mastodon_docker_dir }}"
      nocache: true
    name: mastodon_harvester
    source: build
    force_source: true
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Run docker stack to deploy mastodon harvester
  become: yes
  community.docker.docker_stack:
    compose: "{{ mastodon_docker_dir }}/docker-compose.yaml"
    name: "mastodon-harvester"
    prune: true
  when: inventory_hostname == groups['DockerSwarmManager'][0]

- name: Prune stopped containers and unused images
  become: yes
  community.docker.docker_prune:
    containers: true
    images: true