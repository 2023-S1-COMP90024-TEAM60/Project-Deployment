---
- name: Recursively remove directory if it exists
  ansible.builtin.file:
    path: "{{ mastodon_docker_dir }}"
    state: absent
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Create Mastodon directory
  become: yes
  ansible.builtin.file:
    path: "{{ mastodon_docker_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    state: directory
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Copy mastodon source folder with owner and permissions
  ansible.builtin.copy:
    src: ../../mastodon/
    dest: "{{ mastodon_docker_dir }}/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Copy docker-compose file with owner and permissions
  become: yes
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ mastodon_docker_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname == groups['DockerSwarmManager'][0]


- name: Install pip library
  become: yes
  ansible.builtin.pip:
    name: ["jsondiff"]
    state: latest
  when: inventory_hostname == groups['DockerSwarmManager'][0]

- name: Build an image
  become: yes
  community.docker.docker_image:
    build:
      path: "{{ mastodon_docker_dir }}"
    name: mastodon_harvester
    source: build
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['App']

- name: Run docker stack to deploy mastodon harvester
  become: yes
  community.docker.docker_stack:
    compose: "{{ mastodon_docker_dir }}/docker-compose.yaml"
    name: "mastodon-harvestor"
  when: inventory_hostname == groups['DockerSwarmManager'][0]

# - name: Run `docker-compose up`
#   become: yes
#   community.docker.docker_compose:
#     project_src: "{{ mastodon_docker_dir }}"
#     build: false
#     files:
#       - "docker-compose-{{ item.server_name }}.yaml"
#   loop: "{{ mastodon_servers }}"
#   when: inventory_hostname == groups['DockerSwarmManager'][0]



# - name: Pause for 10 seconds to remove couchdb stack
#   ansible.builtin.pause:
#     seconds: 10

# - name: Run docker compose
#   become: yes
#   community.docker.docker_stack:
#     compose: "{{ couchdb_docker_dir }}/docker-compose.yaml"
#     name: couchdb
#   when: inventory_hostname == groups['DockerSwarmManager'][0]
