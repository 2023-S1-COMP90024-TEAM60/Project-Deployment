---
- name: Recursively remove directory if it exists
  become: yes
  ansible.builtin.file:
    path: "{{ load_balancer_docker_dir }}"
    state: absent
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['Couchdb']

- name: Create CouchdB LB directory
  become: yes
  ansible.builtin.file:
    path: "{{ load_balancer_docker_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    state: directory
  when: inventory_hostname == groups['DockerSwarmManager'][0] or inventory_hostname in groups['Couchdb']

- name: Copy docker-compose file with owner and permissions
  become: yes
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: "{{ load_balancer_docker_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname == groups['DockerSwarmManager'][0]

- name: Copy Dockerfile with owner and permissions
  become: yes
  ansible.builtin.template:
    src: Dockerfile
    dest: "{{ load_balancer_docker_dir }}/Dockerfile"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname in groups['Couchdb']

- name: Copy haproxy.cfg with owner and permissions
  become: yes
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: "{{ load_balancer_docker_dir }}/haproxy.cfg"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: inventory_hostname in groups['Couchdb']

- name: Build an image
  become: yes
  community.docker.docker_image:
    build:
      path: "{{ load_balancer_docker_dir }}"
      nocache: true
    name: couchdb_lb
    source: build
    force_source: true
  when: inventory_hostname in groups['Couchdb']

- name: Run docker stack to deploy mastodon harvester
  become: yes
  community.docker.docker_stack:
    compose: "{{ load_balancer_docker_dir }}/docker-compose.yaml"
    name: "couchdb_lb-harvester"
    prune: true
  when: inventory_hostname == groups['DockerSwarmManager'][0]

- name: Prune stopped containers and unused images
  become: yes
  community.docker.docker_prune:
    containers: true
    images: true